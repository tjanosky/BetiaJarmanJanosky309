#include "mbed.h"
#include "MotCon.h"
#include "BNO055/BNO055.h"
#define BLINKING_RATE     50ms // Blinking rate in milliseconds
//declare the necessary motor objects and their pin #â€™s
MotCon pitch_motor(A1, A0, A2);   //uses p26 for pwm and p29 and 30 for direction (complimentary)
MotCon yaw_motor(A5, A3, A4);   //uses p26 for pwm and p29 and 30 for direction (complimentary)
BNO055 imu(D0,D1);
Timer t;
char ch; //define a character variable to read from the keyboard
float yaw_DC = 0.5; //define a float variable for the duty cycle
float pitch_DC = 0.5; //define a float variable for the duty cycle
float pi = 3.14159265359;

    float wrapToPi(float yaw)
    {
        while(yaw > pi)
        yaw = (yaw - 2*pi);

        while(yaw < -pi)
        yaw = (yaw + 2*pi);

        return yaw;
    }
    
// start the main program
int main()
{
    imu.reset();
    imu.setmode(OPERATION_MODE_IMUPLUS); //Set Mode to IMU with relative Heading
    imu.set_angle_units(RADIANS); // Set Angle Units to radians
    imu.set_anglerate_units(RAD_PER_SEC); //Set Gyro units to rad/s
    //infinite while loop to test your code 
    //while(true)
    //{
            //ThisThread::sleep_for(5000);       
            //t.start();
            //yaw_motor.mot_control(yaw_DC);  //Clockwise yaw
            //imu.get_angles();
            //imu.get_gyro();
            //float yaw = imu.euler.yaw;
            //float converted_yaw = wrapToPi(yaw);         
            //printf("%f,%f,%f,%f,%f,%.2f\n\r",imu.euler.pitch,imu.euler.yaw,converted_yaw,imu.gyro.y,imu.gyro.z,t.read());   
        
    //}  //close while loop
     while(t.read()<= 4.0)
     {
         t.start();
            yaw_motor.mot_control(yaw_DC);  //Clockwise yaw
            imu.get_angles();
            imu.get_gyro();
            float yaw = imu.euler.yaw;
            float converted_yaw = wrapToPi(yaw);         
            printf("%.2f,%.2f,%.2f\n\r",converted_yaw,imu.gyro.z,t.read());
     }
     //while(t.read()<= 4.0)
     //{
         //t.start();
            //yaw_motor.mot_control(-yaw_DC);  //CCW Yaw
            //imu.get_angles();
            //imu.get_gyro();
            //float yaw = imu.euler.yaw;
            //float converted_yaw = wrapToPi(yaw);         
            //printf("%.2f,%.2f,%.2f\n\r",converted_yaw,imu.gyro.z,t.read());
     //}
}//close main

